#aggregate steps per day
stepsPerDay <- aggregate(data$steps, by=list(data$date),FUN = sum, na.rm=TRUE)
hist(stepsPerDay$x, breaks = 50, xlab="Total steps taken each day")
mean(stepsPerDay$x, na.rm=TRUE)
median(stepsPerDay$x, na.rm=TRUE)
#What is the average daily activity pattern?
dailyAverage <- aggregate(data$steps, by=list(data$interval), FUN = mean, na.rm=TRUE)
str(data$interval)
data <- read.csv("activity.csv", header=TRUE, sep=",", colClasses = c("numeric","character","numeric"))
data$date <- as.Date(data$date, "%Y-%m-%d")
time <- formatC(data$interval / 100, 2, format='f')
#data$interval <- strptime(paste(data$date, time), "%Y-%m-%d %H.%M")
data$interval <- as.POSIXct(paste(data$date, time),format='%Y-%m-%d %H.%M')
#What is mean total number of steps taken per day?
#aggregate steps per day
stepsPerDay <- aggregate(data$steps, by=list(data$date),FUN = sum, na.rm=TRUE)
hist(stepsPerDay$x, breaks = 50, xlab="Total steps taken each day")
mean(stepsPerDay$x, na.rm=TRUE)
median(stepsPerDay$x, na.rm=TRUE)
#What is the average daily activity pattern?
dailyAverage <- aggregate(data$steps, by=list(data$interval), FUN = mean, na.rm=TRUE)
str(data$interval)
plot(dailyAverage, type = "l", xlab = "5-minutes interval", ylab ="average number of steps taken")
data[which.max(data$steps),]
#Imputing missing values
#count the total number of misssing values
length(which(is.na(data$steps)==T))
numberRowNAs <- sum(apply(is.na(data), 1, any))
na.replace <- function(act) {
ddply(act, ~interval, function(dd) {
steps <- dd$steps
dd$steps[is.na(steps)] <- mean(steps, na.rm = TRUE)
return(dd)
})
}
imputedActivity <- na.replace(activity)
require(plyr)
imputedActivity <- na.replace(activity)
imputedActivity <- na.replace(data)
str(imputedActivity)
imputedStepsPerDay <- ddply(imputedActivity, ~date, summarise, steps = sum(steps))
str(imputedStepsPerDay)
Data1 <- Data
#Filling na values with total steps means (Not good enough)
# replace(Data1$steps, is.na(Data1$steps), mean(Data1$steps, na.rm=T))
#Filling na values with interval's steps means (Much better)
row.names(spi)<- spi$interval
ind <- which(is.na(Data1$steps))
Data1[ind,1] <- spi[as.factor(Data1[ind,3]),2]
detach(Data)
attach(Data1)
data1 <- data
str(data)
str(data1)
spi <- ddply(data, .(interval), summarize, steps = mean(steps, na.rm=TRUE))
str(spi)
row.names(dailyAverage)<- dailyAverage$interval
str(dailyAverage)
ind <- which(is.na(data1$steps))
ind
?row.names
data1[ind,1] <- dailyAverage[as.factor(data1[ind,3]),2]
str(data1)
detach(data)
?detach
spd1 <- ddply(data1, .(date), summarize, steps = sum(steps))
str(spd1)
data1[ind,1]
data[,1]
str(data1)
dailyAverage[as.factor(data1[ind,3]),2]
str(dailyAverage)
dailyAverage <- aggregate(data$steps, by=list(data$interval), FUN = mean, na.rm=TRUE)
dailyAverage[as.factor(data1[ind,3]),2]
fill.value <- function(steps, interval) {
filled <- NA
if (!is.na(steps))
filled <- c(steps)
else
filled <- (averages[dailyAverage$interval==interval, "steps"])
return(filled)
}
filled.data <- data
filled.data$steps <- mapply(fill.value, filled.data$steps, filled.data$interval)
fill.value <- function(steps, interval) {
filled <- NA
if (!is.na(steps))
filled <- c(steps)
else
filled <- (average[dailyAverage$interval==interval, "steps"])
return(filled)
}
filled.data <- data
filled.data$steps <- mapply(fill.value, filled.data$steps, filled.data$interval)
fill.value <- function(steps, interval) {
filled <- NA
if (!is.na(steps))
filled <- c(steps)
else
filled <- (dailyAverage[dailyAverage$interval==interval, "steps"])
return(filled)
}
filled.data <- data
filled.data$steps <- mapply(fill.value, filled.data$steps, filled.data$interval)
str(filled.data)
dailyAverage <- aggregate(data$steps, by=list(data$interval), FUN = mean, na.rm=TRUE)
str(dailyAverage)
?row.names
row.names(dailyAverage)
ind <- which(is.na(data$steps))
str(ind)
head(int)
head(ind)
index <- which(is.na(data$steps))
tail(index)
View(dailyAverage)
View(data)
View(stepsPerDay)
plot(dailyAverage, type = "l", xlab = "5-minutes interval", ylab ="average number of steps taken")
hist(stepsPerDay$x, breaks = 50, xlab="Total steps taken each day")
View(stepsPerDay)
data[which.max(data$steps),]
?ddply
library(plyr)
unzip("activity.zip", exdir = "/Users/dfernandezcanon/Documents/Development/R/Project/ReproducibleResearch/Project1")
data <- read.csv("activity.csv", header=TRUE, sep=",", colClasses = c("numeric","character","numeric"))
data$date <- as.Date(data$date, "%Y-%m-%d")
time <- formatC(data$interval / 100, 2, format='f')
data$interval <- as.POSIXct(paste(data$date, time),format='%Y-%m-%d %H.%M')
#What is mean total number of steps taken per day?
#aggregate steps per day
stepsPerDay <- ddply(data, .(date), summarize, steps = sum(steps))
#stepsPerDay <- aggregate(data$steps, by=list(data$date),FUN = sum, na.rm=TRUE)
hist(stepsPerDay$x, breaks = 50, xlab="Total steps taken each day")
hist(stepsPerDay$steps, breaks = 50, xlab="Total steps taken each day")
mean(stepsPerDay$steps, na.rm=TRUE)
median(stepsPerDay$steps, na.rm=TRUE)
dailyAverage <- ddply(data, .(interval), summarize, steps = mean(steps, na.rm=TRUE))
#dailyAverage <- aggregate(data$steps, by=list(data$interval), FUN = mean, na.rm=TRUE)
plot(dailyAverage, type = "l", xlab = "5-minutes interval", ylab ="average number of steps taken")
data[which.max(data$steps),]
#Imputing missing values
#count the total number of misssing values
length(which(is.na(data$steps)==T))
plot(dailyAverage$interval, dailyAverage$steps, type = "l", xlab = "5-minutes interval", ylab ="average number of steps taken")
#What is the average daily activity pattern?
dailyAverage <- ddply(data, .(interval), summarize, steps = mean(steps, na.rm=TRUE))
#dailyAverage <- aggregate(data$steps, by=list(data$interval), FUN = mean, na.rm=TRUE)
plot(dailyAverage$interval, dailyAverage$steps, type = "l", xlab = "5-minutes interval", ylab ="average number of steps taken")
plot(dailyAverage$interval,dailyAverage$steps, ylab="Average number of steps per interval",xlab="Interval", main=NULL, type="l", lwd=2, col="green")
plot(dailyAverage, type = "l", xlab = "5-minutes interval", ylab ="average number of steps taken")
plot(dailyAverage$interval, dailyAverage$steps, type = "l", xlab = "5-minutes interval", ylab ="average number of steps taken")
library(plyr)
unzip("activity.zip", exdir = "/Users/dfernandezcanon/Documents/Development/R/Project/ReproducibleResearch/Project1")
data <- read.csv("activity.csv", header=TRUE, sep=",", colClasses = c("numeric","character","numeric"))
data$date <- as.Date(data$date, "%Y-%m-%d")
time <- formatC(data$interval / 100, 2, format='f')
data$interval <- as.POSIXct(paste(data$date, time),format='%Y-%m-%d %H.%M')
#What is mean total number of steps taken per day?
#aggregate steps per day
stepsPerDay <- ddply(data, .(date), summarize, steps = sum(steps))
View(stepsPerDay)
library(plyr)
#stepsPerDay <- aggregate(data$steps, by=list(data$date),FUN = sum, na.rm=TRUE)
hist(stepsPerDay$steps, breaks = 50, xlab="Total steps taken each day")
mean(stepsPerDay$steps, na.rm=TRUE)
median(stepsPerDay$steps, na.rm=TRUE)
#What is the average daily activity pattern?
dailyAverage <- ddply(data, .(interval), summarize, steps = mean(steps, na.rm=TRUE))
library(plyr)
unzip("activity.zip", exdir = "/Users/dfernandezcanon/Documents/Development/R/Project/ReproducibleResearch/Project1")
data <- read.csv("activity.csv", header=TRUE, sep=",", colClasses = c("numeric","character","numeric"))
data$date <- as.Date(data$date, "%Y-%m-%d")
#time <- formatC(data$interval / 100, 2, format='f')
#data$interval <- as.POSIXct(paste(data$date, time),format='%Y-%m-%d %H.%M')
#What is mean total number of steps taken per day?
#aggregate steps per day
stepsPerDay <- ddply(data, .(date), summarize, steps = sum(steps))
#stepsPerDay <- aggregate(data$steps, by=list(data$date),FUN = sum, na.rm=TRUE)
hist(stepsPerDay$steps, breaks = 50, xlab="Total steps taken each day")
mean(stepsPerDay$steps, na.rm=TRUE)
median(stepsPerDay$steps, na.rm=TRUE)
#What is the average daily activity pattern?
dailyAverage <- ddply(data, .(interval), summarize, steps = mean(steps, na.rm=TRUE))
#dailyAverage <- aggregate(data$steps, by=list(data$interval), FUN = mean, na.rm=TRUE)
plot(dailyAverage$interval, dailyAverage$steps, type = "l", xlab = "5-minutes interval", ylab ="average number of steps taken")
library(plyr)
unzip("activity.zip", exdir = "/Users/dfernandezcanon/Documents/Development/R/Project/ReproducibleResearch/Project1")
library(plyr)
unzip("activity.zip", exdir = "/Users/dfernandezcanon/Documents/Development/R/Project/ReproducibleResearch/Project1")
data <- read.csv("activity.csv", header=TRUE, sep=",", colClasses = c("numeric","character","numeric"))
data$date <- as.Date(data$date, "%Y-%m-%d")
#time <- formatC(data$interval / 100, 2, format='f')
#data$interval <- as.POSIXct(paste(data$date, time),format='%Y-%m-%d %H.%M')
#What is mean total number of steps taken per day?
#aggregate steps per day
#stepsPerDay <- ddply(data, .(date), summarize, steps = sum(steps))
stepsPerDay <- aggregate(data$steps, by=list(data$date),FUN = sum, na.rm=TRUE)
hist(stepsPerDay$steps, breaks = 50, xlab="Total steps taken each day")
median(stepsPerDay$x, na.rm=TRUE)
stepsPerDay <- aggregate(data$steps, by=list(data$date),FUN = sum, na.rm=TRUE)
hist(stepsPerDay$x, breaks = 50, xlab="Total steps taken each day")
mean(stepsPerDay$x, na.rm=TRUE)
median(stepsPerDay$x, na.rm=TRUE)
#What is the average daily activity pattern?
#dailyAverage <- ddply(data, .(interval), summarize, steps = mean(steps, na.rm=TRUE))
dailyAverage <- aggregate(data$steps, by=list(data$interval), FUN = mean, na.rm=TRUE)
plot(dailyAverage$Group.1, dailyAverage$x, type = "l", xlab = "5-minutes interval", ylab ="average number of steps taken")
data[which.max(data$steps),]
#Imputing missing values
data[which.max(data$x),]
colnames(stepsPerDay) <- c("date","steps")
hist(stepsPerDay$steps, breaks = 50, xlab="Total steps taken each day")
mean(stepsPerDay$steps, na.rm=TRUE)
median(stepsPerDay$steps, na.rm=TRUE)
colnames(stepsPerDay) <- c("interval","steps")
plot(dailyAverage$interval, dailyAverage$steps, type = "l", xlab = "5-minutes interval", ylab ="average number of steps taken")
unzip("activity.zip", exdir = "/Users/dfernandezcanon/Documents/Development/R/Project/ReproducibleResearch/Project1")
data <- read.csv("activity.csv", header=TRUE, sep=",", colClasses = c("numeric","character","numeric"))
data$date <- as.Date(data$date, "%Y-%m-%d")
#time <- formatC(data$interval / 100, 2, format='f')
#data$interval <- as.POSIXct(paste(data$date, time),format='%Y-%m-%d %H.%M')
#What is mean total number of steps taken per day?
#aggregate steps per day
#stepsPerDay <- ddply(data, .(date), summarize, steps = sum(steps))
stepsPerDay <- aggregate(data$steps, by=list(data$date),FUN = sum, na.rm=TRUE)
colnames(stepsPerDay) <- c("date","steps")
hist(stepsPerDay$steps, breaks = 50, xlab="Total steps taken each day")
mean(stepsPerDay$steps, na.rm=TRUE)
median(stepsPerDay$steps, na.rm=TRUE)
#What is the average daily activity pattern?
#dailyAverage <- ddply(data, .(interval), summarize, steps = mean(steps, na.rm=TRUE))
dailyAverage <- aggregate(data$steps, by=list(data$interval), FUN = mean, na.rm=TRUE)
colnames(stepsPerDay) <- c("interval","steps")
plot(dailyAverage$interval, dailyAverage$steps, type = "l", xlab = "5-minutes interval", ylab ="average number of steps taken")
colnames(dailyAverage) <- c("interval","steps")
plot(dailyAverage$interval, dailyAverage$steps, type = "l", xlab = "5-minutes interval", ylab ="average number of steps taken")
data[which.max(data$steps),]
data[which.max(dailyAverage$steps),]
dailyAverage[which.max(dailyAverage$steps),]
which(is.na(data$steps))
index <- which(is.na(data$steps))
length(index)
length(which(is.na(data$steps)))
length(index)
dailyAvergage[as.factor(dataNoNA[ind,3]),2]
dailyAverage[as.factor(dataNoNA[ind,3]),2]
dataNoNA <- data
dailyAverage[as.factor(dataNoNA[ind,3]),2]
dailyAverage[as.factor(dataNoNA[index,3]),2]
as.factor(dataNoNA[index,3])
dataNoNA[index,1]
count(dataNoNA[index,1])
count(dailyAverage[as.factor(dataNoNA[index,3]),2])
dailyAverage[as.factor(dataNoNA[index,3]),2]
dataNoNA[index,1] <- dailyAverage[as.factor(dataNoNA[index,3]),2]
View(dataNoNA)
View(data)
stepsPerDay <- aggregate(dataNoNA$steps, by=list(dataNoNA$date),FUN = sum, na.rm=TRUE)
colnames(stepsPerDay) <- c("date","steps")
hist(stepsPerDay$steps, breaks = 50, xlab="Total steps taken each day")
mean(stepsPerDay$steps, na.rm=TRUE)
median(stepsPerDay$steps, na.rm=TRUE)
weekday(date)
weekday(date)
weekdays(date)
?weekdays
DayOfWeek <- function(date) {
if (weekdays(date) %in% c('Saturday', 'Sunday')) {
return('Weekend')
} else {
return('Weekday')
}
}
data$weekpart <- sapply(data$date, DayOfWeek)
dataNoNA$weekpart <- sapply(dataNoNA$date, DayOfWeek)
?aggregate
stepsPerDay <- aggregate(dataNoNA$steps, by=list(dataNoData$interval,dataNoData$weekpart),FUN = mean)
stepsPerDay <- aggregate(dataNoNA$steps, by=list(dataNoNA$interval,dataNoNA$weekpart),FUN = mean)
stepsWeekPart <- aggregate(dataNoNA$steps, by=list(dataNoNA$interval,dataNoNA$weekpart),FUN = mean)
colnames(stepsWeekPart) <- c("interval","weekpart","steps")
hist(stepsPerDayNoNA$steps, breaks = 50, xlab="Total steps taken each day")
?plot
p <- ggplot(stepsWeekPart, aes(x = interval, y = mean))
require(ggplot2)
p <- ggplot(stepsWeekPart, aes(x = interval, y = mean))
p <- p + geom_line() + facet_grid(. ~ weekpart, )
p <- p + ggtitle("Activity patterns on weekends and weekdays")
p + xlab("Interval") + ylab("Number of steps")
p <- ggplot(stepsWeekPart, aes(x = interval, y = mean))
p <- p + geom_line() + facet_grid(. ~ weekpart, )
p <- p + ggtitle("Activity patterns on weekends and weekdays")
p + xlab("Interval") + ylab("Number of steps")
ggplot(stepsWeekPart, aes(interval, steps)) + geom_line() + facet_grid(weekpart ~ .) +
xlab("5-minute interval") + ylab("Number of steps")
ggplot(stepsWeekPart, aes(interval, steps)) +
geom_line() +
xlab('Time of day') +
ylab('Mean number of steps') +
scale_x_datetime(labels=date_format(format='%H:%M')) +
facet_grid(. ~ weekpart)
ggplot(stepsWeekPart, aes(interval, steps)) +
geom_line() +
xlab('Time of day') +
ylab('Mean number of steps') +
facet_grid(. ~ weekpart)
View(stepsWeekPart)
View(dataNoNA)
View(stepsWeekPart)
unzip("activity.zip", exdir = "/Users/dfernandezcanon/Documents/Development/R/Project/ReproducibleResearch/Project1")
data <- read.csv("activity.csv", header=TRUE, sep=",", colClasses = c("numeric","character","numeric"))
data$date <- as.Date(data$date, "%Y-%m-%d")
require(ggplot2)
unzip("activity.zip", exdir = "/Users/dfernandezcanon/Documents/Development/R/Project/ReproducibleResearch/Project1")
data <- read.csv("activity.csv", header=TRUE, sep=",", colClasses = c("numeric","character","numeric"))
data$date <- as.Date(data$date, "%Y-%m-%d")
#What is mean total number of steps taken per day?
#aggregate steps per day
stepsPerDay <- aggregate(data$steps, by=list(data$date),FUN = sum, na.rm=TRUE)
colnames(stepsPerDay) <- c("date","steps")
hist(stepsPerDay$steps, breaks = 50, xlab="Total steps taken each day")
mean(stepsPerDay$steps, na.rm=TRUE)
median(stepsPerDay$steps, na.rm=TRUE)
#What is the average daily activity pattern?
dailyAverage <- aggregate(data$steps, by=list(data$interval), FUN = mean, na.rm=TRUE)
colnames(dailyAverage) <- c("interval","steps")
plot(dailyAverage$interval, dailyAverage$steps, type = "l", xlab = "5-minutes interval", ylab ="average number of steps taken")
dailyAverage[which.max(dailyAverage$steps),]
#Imputing missing values
#count the total number of misssing values
index <- which(is.na(data$steps))
length(index)
#new dataset using the mean for that 5-minute interval
dataNoNA <- data
dataNoNA[index,1] <- dailyAverage[as.factor(dataNoNA[index,3]),2]
#aggregate steps per day
stepsPerDayNoNA <- aggregate(dataNoNA$steps, by=list(dataNoNA$date),FUN = sum)
colnames(stepsPerDayNoNA) <- c("date","steps")
hist(stepsPerDayNoNA$steps, breaks = 50, xlab="Total steps taken each day")
mean(stepsPerDay$steps, na.rm=TRUE)
mean(stepsPerDayNoNA$steps)
median(stepsPerDay$steps, na.rm=TRUE)
median(stepsPerDayNoNA$steps)
#Are there differences in activity patterns between weekdays and weekends?
DayOfWeek <- function(date) {
if (weekdays(date) %in% c('Saturday', 'Sunday')) {
return('Weekend')
} else {
return('Weekday')
}
}
dataNoNA$weekpart <- sapply(dataNoNA$date, DayOfWeek)
stepsWeekPart <- aggregate(dataNoNA$steps, by=list(dataNoNA$interval,dataNoNA$weekpart),FUN = mean)
colnames(stepsWeekPart) <- c("interval","weekpart","steps")
ggplot(stepsWeekPart, aes(interval, steps)) + geom_line() + facet_grid(weekpart ~ .) +
xlab("5-minute interval") + ylab("Number of steps")
unzip("activity.zip", exdir = "/Users/dfernandezcanon/Documents/Development/R/Project/ReproducibleResearch/Project1")
activity <- read.csv("activity.csv", header = TRUE)
activity <- transform(activity, date = as.Date(date))
stepsPerDay <- ddply(activity, ~date, summarise, steps = sum(steps))
p <- ggplot(stepsPerDay, aes(steps))
p <- p + geom_histogram(fill = "white", color = "black")
p <- p + ggtitle("Total number of steps per day")
p + xlab("Steps per day")
meanStepsPerDay <- mean(stepsPerDay$steps, na.rm = TRUE)
medianStepsPerDay <- median(stepsPerDay$steps, na.rm = TRUE)
avgStepsPerInterval <- ddply(activity,
~interval,
summarise,
mean = mean(steps, na.rm = T))
p <- ggplot(avgStepsPerInterval, aes(interval, mean)) + geom_line()
p <- p + ggtitle("The average daily activity pattern")
p + xlab("Interval") + ylab("Number of steps")
maxId <- which.max(avgStepsPerInterval$mean)
maxInterval <- avgStepsPerInterval$interval[maxId]
numberRowNAs <- sum(apply(is.na(activity), 1, any))
na.replace <- function(act) {
ddply(act, ~interval, function(dd) {
steps <- dd$steps
dd$steps[is.na(steps)] <- mean(steps, na.rm = TRUE)
return(dd)
})
}
imputedActivity <- na.replace(activity)
imputedStepsPerDay <- ddply(imputedActivity, ~date, summarise, steps = sum(steps))
p <- p + geom_histogram(fill = "white", color = "black")
p <- ggplot(imputedStepsPerDay, aes(steps))
p <- p + geom_histogram(fill = "white", color = "black")
p <- p + ggtitle("Total number of steps per day")
p + xlab("Steps per day")
imputedMeanStepsPerDay <- mean(imputedStepsPerDay$steps)
imputedMedianStepsPerDay <- median(imputedStepsPerDay$steps)
weekParts <- c("Weekday", "Weekend")
date2weekpart <- function(date) {
day <- weekdays(date)
part <- factor("Weekday", weekParts)
if (day %in% c("Saturday", "Sunday"))
part <- factor("Weekend", weekParts)
return(part)
}
imputedActivity$weekpart <- sapply(imputedActivity$date, date2weekpart)
avgSteps <- ddply(imputedActivity,
.(interval, weekpart),
summarise,
mean = mean(steps))
p <- ggplot(avgSteps, aes(x = interval, y = mean))
p <- p + geom_line() + facet_grid(. ~ weekpart, )
p <- p + ggtitle("Activity patterns on weekends and weekdays")
p + xlab("Interval") + ylab("Number of steps")
View(avgSteps)
Data <- read.csv("activity.csv")
attach(Data)
Data <- read.csv("activity.csv")
attach(Data)
library(xtable)
#Set the output options for numbers
options(scipen = 9, digits = 3 )
print(xtable(summary(Data)), type="html")
library(plyr)
spd <- ddply(Data, .(date), summarize, steps = sum(steps))
mean.spd <- mean(spd$steps, na.rm = TRUE)
median.spd <- median(spd$steps, na.rm = TRUE)
hist(spd$steps, xlab="Total number of steps per day", main=NULL, col="light blue")
abline(v=mean.spd, col = c("red"))
abline(v=median.spd, col = c("blue"), lty = 2)
spi <- ddply(Data, .(interval), summarize, steps = mean(steps, na.rm=TRUE))
max.spi <- max(spi$steps)
max.int <- spi[spi$steps==max(max.spi),1]
plot(spi$interval,spi$steps, ylab="Average number of steps per interval",xlab="Interval", main=NULL, type="l", lwd=2, col="green")
abline(h=max.spi, col = c("red"))
abline(v=max.int, col = c("blue"))
miss <- dim(Data[is.na(Data$steps),])[1]
#Copy of Data
Data1 <- Data
#Filling na values with total steps means (Not good enough)
# replace(Data1$steps, is.na(Data1$steps), mean(Data1$steps, na.rm=T))
#Filling na values with interval's steps means (Much better)
row.names(spi)<- spi$interval
ind <- which(is.na(Data1$steps))
Data1[ind,1] <- spi[as.factor(Data1[ind,3]),2]
detach(Data)
attach(Data1)
spd1 <- ddply(Data1, .(date), summarize, steps = sum(steps))
mean.spd1 <- mean(spd1$steps, na.rm = TRUE)
median.spd1 <- median(spd1$steps, na.rm = TRUE)
mdays <- dim(spd[is.na(spd$steps),])[1]
mdays1 <- dim(spd1[is.na(spd1$steps),])[1]
t1 <- merge(spd,spd1, by=1)
names(t1)<- c("Date","First estimate","Second estimate")
print(xtable(t1), type="html")
hist(spd1$steps, xlab="Total number of steps per day", main=NULL, col="light blue")
abline(v=mean.spd1, col = c("red"))
abline(v=median.spd1, col = c("blue"), lty = 2)
Data1$day <- weekdays(as.Date(date))
attach(Data1)
d <- levels(factor(day))
Data1$week <- "weekday"
Data1[day==d[1],5]<-"weekend"
Data1[day==d[6],5]<-"weekend"
Data1$week <- as.factor(Data1$week)
spiw <- ddply(Data1, .(interval,week), summarize, steps = mean(steps, na.rm=TRUE))
max.spiw <- max(spiw$steps)
require(ggplot2)
unzip("activity.zip", exdir = "/Users/dfernandezcanon/Documents/Development/R/Project/ReproducibleResearch/Project1")
data <- read.csv("activity.csv", header=TRUE, sep=",", colClasses = c("numeric","character","numeric"))
data$date <- as.Date(data$date, "%Y-%m-%d")
#What is mean total number of steps taken per day?
#aggregate steps per day
stepsPerDay <- aggregate(data$steps, by=list(data$date),FUN = sum, na.rm=TRUE)
colnames(stepsPerDay) <- c("date","steps")
hist(stepsPerDay$steps, breaks = 50, xlab="Total steps taken each day")
mean(stepsPerDay$steps, na.rm=TRUE)
median(stepsPerDay$steps, na.rm=TRUE)
#What is the average daily activity pattern?
dailyAverage <- aggregate(data$steps, by=list(data$interval), FUN = mean, na.rm=TRUE)
colnames(dailyAverage) <- c("interval","steps")
plot(dailyAverage$interval, dailyAverage$steps, type = "l", xlab = "5-minutes interval", ylab ="average number of steps taken")
dailyAverage[which.max(dailyAverage$steps),]
#Imputing missing values
#count the total number of misssing values
index <- which(is.na(data$steps))
length(index)
#new dataset using the mean for that 5-minute interval
dataNoNA <- data
dataNoNA[index,1] <- dailyAverage[as.factor(dataNoNA[index,3]),2]
#aggregate steps per day
stepsPerDayNoNA <- aggregate(dataNoNA$steps, by=list(dataNoNA$date),FUN = sum)
colnames(stepsPerDayNoNA) <- c("date","steps")
hist(stepsPerDayNoNA$steps, breaks = 50, xlab="Total steps taken each day")
mean(stepsPerDay$steps, na.rm=TRUE)
mean(stepsPerDayNoNA$steps)
median(stepsPerDay$steps, na.rm=TRUE)
median(stepsPerDayNoNA$steps)
#Are there differences in activity patterns between weekdays and weekends?
DayOfWeek <- function(date) {
if (weekdays(date) %in% c('Saturday', 'Sunday')) {
return('Weekend')
} else {
return('Weekday')
}
}
dataNoNA$weekpart <- sapply(dataNoNA$date, DayOfWeek)
stepsWeekPart <- aggregate(dataNoNA$steps, by=list(dataNoNA$interval,dataNoNA$weekpart),FUN = mean)
colnames(stepsWeekPart) <- c("interval","weekpart","steps")
ggplot(stepsWeekPart, aes(interval, steps)) + geom_line() + facet_grid(weekpart ~ .) +
xlab("5-minute interval") + ylab("Number of steps")
ggplot(data=stepsWeekPart, aes(x=interval, y=steps, group=week)) + geom_line(aes(color=week))+ facet_wrap(~ week, nrow=2)
ggplot(stepsWeekPart, aes(interval, steps)) + geom_line() + facet_grid(weekpart ~ .) +
xlab("5-minute interval") + ylab("Number of steps")
stepsWeekPart <- aggregate(dataNoNA, by=list(dataNoNA$interval,dataNoNA$weekpart),FUN = mean(steps))
?aggregate
stepsWeekPart <- aggregate(dataNoNA$steps, by=list(dataNoNA$interval, dataNoNA$weekpart),FUN = mean)
